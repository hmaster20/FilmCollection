
Продумать новый функционал:
1. продумать использование FileWatcher
2. использование доп.информации о файлах (кодеки)
3. продумать поисковый механизм
4. Категории: взрослые, детские, семейные (военные)
5. эскпорт (или хранение) файлов в форматах: xml, bin
6. создание отчетов в форматах word, excel, html
7. отображение кликабельных постеров
8. продумать возможность интеграции данных в SQL
9. Сделать настраиваемый фильтр для добавления файлов в процессе создания базы (mkv,avi, *)
10. Переименование файлы
11. База актеров
12. Массовое переименование по маске
13. отображение иерархии каталогов, актеров
14. разработать форму настроек приложения
15. Оптимизировать создание дерева до передачи интерфейсу
16. Сделать опцию настройки и добавления столбцов // this.customersDataGridView.Columns[0].Visible = false;
17. Сделать возможность отображения файлов при клике на ветку Tree или контекстное меню для отображения всего содержимого




###########################################################################################################
 private void DeleteRec_Click(object sender, EventArgs e)
        {
             /*            
             * Кто поможет написать код для удалении строк из DataGridView,
             * что бы после рефреша формы или проекта не строка с такой ID больше не появлялся в списке DataGridView.
             * если удалить все то так:
             * dataGridView1.Rows.Clear();
             * dataGridView1.Refresh();
             * если конкретную строчку то надо знать ее индекс
             * dataGridView1.Rows.RemoveAt(индекс строки);
             * dataGridView1.Refresh();
             * можно удалить и имея объект row
             * dataGridView1.Rows.Remove(row);
             * dataGridView1.Refresh();
             * дополнительно вам надо ее еще и из базы удалить. 
             * Необходимо знать уникальный идентификатор записи в базе (обычно Id), выполнить запрос на удаление
             */