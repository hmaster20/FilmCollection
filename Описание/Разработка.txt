Направления для разработки:
1.Главное:
- исправить проблему очистки дерева при очистке базы
- отдельный класс для фильмов
- получения инфы о фильме и сериале - кнопка
- карточка для сериала
- сделать зачеркнутым текст удаленных строк
- возможность ввода биографии актеров
- добавить возможность перемещения файлов
- продумать поисковый механизм (есть проблема при поиске последующего элемента, если включена фильтрация)
- доработать механизм создания и удаления базы
- оптимизировать создание дерева до передачи интерфейсу
- добавить переименование файлов (массовое по маске)
- Сделать настраиваемый фильтр для добавления файлов в процессе создания базы (mkv,avi, *)
- База актеров
- обеспечить возможность восстановления удаленной записи (уведомлять об удалении записи но не файла)

=====================================================
2.Вспомогательное:
- drag & drop для таблицы и дерева
- добавить категории: взрослые, детские, семейные (age group)
- Сделать расчет для прогресс бара
- разработать форму настроек приложения
- обеспечить возможность переключения между списком актеров и иерархией каталогов
- Сделать опцию настройки и добавления столбцов // this.customersDataGridView.Columns[0].Visible = false;
- отображение кликабельных постеров
- экспорт (или хранение) файлов в форматах: XML, bin
- Сделать сохранение параметров в папку appdata
- создание отчетов в форматах word, excel, HTML
- продумать использование FileWatcher
- использование доп.информации о файлах (кодеки)
- продумать возможность интеграции данных в SQL



###########################################################################################################
 private void DeleteRec_Click(object sender, EventArgs e)
       
             * Кто поможет написать код для удалении строк из DataGridView,
             * что бы после рефреша формы или проекта не строка с такой ID больше не появлялся в списке DataGridView.
             * если удалить все то так:
             * dataGridView1.Rows.Clear();
             * dataGridView1.Refresh();
             * если конкретную строчку то надо знать ее индекс
             * dataGridView1.Rows.RemoveAt(индекс строки);
             * dataGridView1.Refresh();
             * можно удалить и имея объект row
             * dataGridView1.Rows.Remove(row);
             * dataGridView1.Refresh();
             * дополнительно вам надо ее еще и из базы удалить. 
             * Необходимо знать уникальный идентификатор записи в базе (обычно Id), выполнить запрос на удаление
             */


               //Regex my_reg = new Regex("[0-9]+");
                // string out_string = my_reg.Replace(_videoCollection.VideoList[i].Name, "");

                //FindCinema(_videoCollection.VideoList[i].Name)
                //s = Regex.Replace(s, "[^0-9.]", "");

                // удалить все цифры
                //var output = Regex.Replace(_videoCollection.VideoList[i].Name, @"[\d-]", string.Empty);
                //vудалить все цифры и точки
                //var output = Regex.Replace(_videoCollection.VideoList[i].Name, @"[\d-.]", string.Empty);
                //vудалить все что не цифры и не буквы, кроме тире
                //var output = Regex.Replace(_videoCollection.VideoList[i].Name, @"[^a-zA-Z0-9 -]", string.Empty);

                //удаление всех латинских букв, цифр, подчеркивания, точки, скобок
                //var output = Regex.Replace(_videoCollection.VideoList[i].Name, @"[a-zA-Z0-9_.()]", string.Empty);

                // Удаление всех латинских букв, цифр, подчеркивания, точки, скобок
                //string output = Regex.Replace(_videoCollection.VideoList[i].Name, @"[a-zA-Z0-9_.()]", string.Empty);

                /*
                string output2 = Regex.Replace(_videoCollection.VideoList[i].Name, @"[a-zA-Z_.()]", string.Empty);
                string output = Regex.Replace(output2, @"[0-9]{4}", string.Empty);
                output = output.Trim(); //убираем пробелы вначале и конце
                MessageBox.Show(output);
                */


//MessageBox.Show(month + "/" + day + "/" + year);

//maskDateOfBirth.
// \d{ 2}/\d{ 2}/\d{ 4}
//  00/00/0000

//string regReplace = tbFind.Text.Replace("*", "");//замена вхождения * 
//Regex regex = new Regex(regReplace, RegexOptions.IgnoreCase);


//    if (regex.IsMatch(row.Cells[cell].Value.ToString()))
//    {
//        i++;
//        dgvSelected.Add(row.Cells[cell].RowIndex);
//        row.Selected = true;
//        //break; //Требуется для выбора одно строки
//    }

//Regex regex = new Regex(@"\b([0-2][0-9][0-1][0-9]1[8-9][0-9][0-9])");
//Match match = regex.Match(maskDateOfBirth.Text);
//if (match.Success)
//{
//    // Console.WriteLine(match.Value);
//    MessageBox.Show(match.Value);
//}




      private void listCreate()
        {
            listView1.View = View.Details;
            listView1.MultiSelect = false;
            listView1.FullRowSelect = true;
            listView1.Columns.Add("Название");
            listView1.Columns.Add("Каталог");
            listView1.Columns.Add("Год");
            listView1.Columns.Add("Страна");
            listView1.Columns.Add("Жанр");
            listView1.Columns.Add("Категория");
            listView1.Columns.Add("Время");
            listView1.Columns.Add("Файл");
            listView1.Items.Clear();
            for (int i = 0; i < _videoCollection.VideoList.Count; i++)
            {
                listView1.Items.Add(_videoCollection.VideoList[i].Name);
                listView1.Items[i].SubItems.Add(_videoCollection.VideoList[i].DirName);
                listView1.Items[i].SubItems.Add(_videoCollection.VideoList[i].Year.ToString());
                listView1.Items[i].SubItems.Add(_videoCollection.VideoList[i].CountryString);
                listView1.Items[i].SubItems.Add(_videoCollection.VideoList[i].GenreString);
                listView1.Items[i].SubItems.Add(_videoCollection.VideoList[i].CategoryString);
                listView1.Items[i].SubItems.Add(_videoCollection.VideoList[i].Time.ToString());
                listView1.Items[i].SubItems.Add(_videoCollection.VideoList[i].FileName);
            }

        }