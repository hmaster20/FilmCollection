Направления для разработки:
1.Главное:
- продумать поисковый механизм
- добавить категории: взрослые, детские, семейные (военные)
- оптимизировать создание дерева до передачи интерфейсу
- добавить переименование файлов (единичное и массовое по маске)
- Сделать возможность отображения файлов при клике на ветку Tree или контекстное меню для отображения всего содержимого
- Сделать настраиваемый фильтр для добавления файлов в процессе создания базы (mkv,avi, *)
- База актеров
- отображение иерархии каталогов, актеров

=====================================================
2.Вспомогательное:
- разработать форму настроек приложения
- Сделать опцию настройки и добавления столбцов // this.customersDataGridView.Columns[0].Visible = false;
- отображение кликабельных постеров
- эскпорт (или хранение) файлов в форматах: xml, bin
- Сделать сохранение параметров в папку appdata
- создание отчетов в форматах word, excel, html
- продумать использование FileWatcher
- использование доп.информации о файлах (кодеки)
- продумать возможность интеграции данных в SQL



###########################################################################################################
 private void DeleteRec_Click(object sender, EventArgs e)
       
             * Кто поможет написать код для удалении строк из DataGridView,
             * что бы после рефреша формы или проекта не строка с такой ID больше не появлялся в списке DataGridView.
             * если удалить все то так:
             * dataGridView1.Rows.Clear();
             * dataGridView1.Refresh();
             * если конкретную строчку то надо знать ее индекс
             * dataGridView1.Rows.RemoveAt(индекс строки);
             * dataGridView1.Refresh();
             * можно удалить и имея объект row
             * dataGridView1.Rows.Remove(row);
             * dataGridView1.Refresh();
             * дополнительно вам надо ее еще и из базы удалить. 
             * Необходимо знать уникальный идентификатор записи в базе (обычно Id), выполнить запрос на удаление
             */